//
// File generated by /u/apps/root/PRO/root/bin/rootcint at Tue Jul 31 14:25:28 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME SBSDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SBSDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HcalDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HcalDetector(void *p = 0);
   static void *newArray_HcalDetector(Long_t size, void *p);
   static void delete_HcalDetector(void *p);
   static void deleteArray_HcalDetector(void *p);
   static void destruct_HcalDetector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HcalDetector*)
   {
      ::HcalDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HcalDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HcalDetector", ::HcalDetector::Class_Version(), "./HcalDetector.h", 13,
                  typeid(::HcalDetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HcalDetector::Dictionary, isa_proxy, 4,
                  sizeof(::HcalDetector) );
      instance.SetNew(&new_HcalDetector);
      instance.SetNewArray(&newArray_HcalDetector);
      instance.SetDelete(&delete_HcalDetector);
      instance.SetDeleteArray(&deleteArray_HcalDetector);
      instance.SetDestructor(&destruct_HcalDetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HcalDetector*)
   {
      return GenerateInitInstanceLocal((::HcalDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HcalDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HcalApparatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HcalApparatus(void *p = 0);
   static void *newArray_HcalApparatus(Long_t size, void *p);
   static void delete_HcalApparatus(void *p);
   static void deleteArray_HcalApparatus(void *p);
   static void destruct_HcalApparatus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HcalApparatus*)
   {
      ::HcalApparatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HcalApparatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HcalApparatus", ::HcalApparatus::Class_Version(), "./HcalApparatus.h", 12,
                  typeid(::HcalApparatus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HcalApparatus::Dictionary, isa_proxy, 4,
                  sizeof(::HcalApparatus) );
      instance.SetNew(&new_HcalApparatus);
      instance.SetNewArray(&newArray_HcalApparatus);
      instance.SetDelete(&delete_HcalApparatus);
      instance.SetDeleteArray(&deleteArray_HcalApparatus);
      instance.SetDestructor(&destruct_HcalApparatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HcalApparatus*)
   {
      return GenerateInitInstanceLocal((::HcalApparatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HcalApparatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FbusDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FbusDetector(void *p = 0);
   static void *newArray_FbusDetector(Long_t size, void *p);
   static void delete_FbusDetector(void *p);
   static void deleteArray_FbusDetector(void *p);
   static void destruct_FbusDetector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FbusDetector*)
   {
      ::FbusDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FbusDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FbusDetector", ::FbusDetector::Class_Version(), "./FbusDetector.h", 13,
                  typeid(::FbusDetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FbusDetector::Dictionary, isa_proxy, 4,
                  sizeof(::FbusDetector) );
      instance.SetNew(&new_FbusDetector);
      instance.SetNewArray(&newArray_FbusDetector);
      instance.SetDelete(&delete_FbusDetector);
      instance.SetDeleteArray(&deleteArray_FbusDetector);
      instance.SetDestructor(&destruct_FbusDetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FbusDetector*)
   {
      return GenerateInitInstanceLocal((::FbusDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FbusDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FbusApparatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FbusApparatus(void *p = 0);
   static void *newArray_FbusApparatus(Long_t size, void *p);
   static void delete_FbusApparatus(void *p);
   static void deleteArray_FbusApparatus(void *p);
   static void destruct_FbusApparatus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FbusApparatus*)
   {
      ::FbusApparatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FbusApparatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FbusApparatus", ::FbusApparatus::Class_Version(), "./FbusApparatus.h", 12,
                  typeid(::FbusApparatus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FbusApparatus::Dictionary, isa_proxy, 4,
                  sizeof(::FbusApparatus) );
      instance.SetNew(&new_FbusApparatus);
      instance.SetNewArray(&newArray_FbusApparatus);
      instance.SetDelete(&delete_FbusApparatus);
      instance.SetDeleteArray(&deleteArray_FbusApparatus);
      instance.SetDestructor(&destruct_FbusApparatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FbusApparatus*)
   {
      return GenerateInitInstanceLocal((::FbusApparatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FbusApparatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CdetDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CdetDetector(void *p = 0);
   static void *newArray_CdetDetector(Long_t size, void *p);
   static void delete_CdetDetector(void *p);
   static void deleteArray_CdetDetector(void *p);
   static void destruct_CdetDetector(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CdetDetector*)
   {
      ::CdetDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CdetDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CdetDetector", ::CdetDetector::Class_Version(), "./CdetDetector.h", 13,
                  typeid(::CdetDetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CdetDetector::Dictionary, isa_proxy, 4,
                  sizeof(::CdetDetector) );
      instance.SetNew(&new_CdetDetector);
      instance.SetNewArray(&newArray_CdetDetector);
      instance.SetDelete(&delete_CdetDetector);
      instance.SetDeleteArray(&deleteArray_CdetDetector);
      instance.SetDestructor(&destruct_CdetDetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CdetDetector*)
   {
      return GenerateInitInstanceLocal((::CdetDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CdetDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CdetApparatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CdetApparatus(void *p = 0);
   static void *newArray_CdetApparatus(Long_t size, void *p);
   static void delete_CdetApparatus(void *p);
   static void deleteArray_CdetApparatus(void *p);
   static void destruct_CdetApparatus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CdetApparatus*)
   {
      ::CdetApparatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CdetApparatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CdetApparatus", ::CdetApparatus::Class_Version(), "./CdetApparatus.h", 12,
                  typeid(::CdetApparatus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CdetApparatus::Dictionary, isa_proxy, 4,
                  sizeof(::CdetApparatus) );
      instance.SetNew(&new_CdetApparatus);
      instance.SetNewArray(&newArray_CdetApparatus);
      instance.SetDelete(&delete_CdetApparatus);
      instance.SetDeleteArray(&deleteArray_CdetApparatus);
      instance.SetDestructor(&destruct_CdetApparatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CdetApparatus*)
   {
      return GenerateInitInstanceLocal((::CdetApparatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CdetApparatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HcalDetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HcalDetector::Class_Name()
{
   return "HcalDetector";
}

//______________________________________________________________________________
const char *HcalDetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HcalDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HcalDetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HcalDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HcalDetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HcalDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HcalDetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HcalDetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HcalApparatus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HcalApparatus::Class_Name()
{
   return "HcalApparatus";
}

//______________________________________________________________________________
const char *HcalApparatus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HcalApparatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HcalApparatus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HcalApparatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HcalApparatus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HcalApparatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HcalApparatus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HcalApparatus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FbusDetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FbusDetector::Class_Name()
{
   return "FbusDetector";
}

//______________________________________________________________________________
const char *FbusDetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FbusDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FbusDetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FbusDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FbusDetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FbusDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FbusDetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FbusDetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FbusApparatus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FbusApparatus::Class_Name()
{
   return "FbusApparatus";
}

//______________________________________________________________________________
const char *FbusApparatus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FbusApparatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FbusApparatus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FbusApparatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FbusApparatus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FbusApparatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FbusApparatus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FbusApparatus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CdetDetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CdetDetector::Class_Name()
{
   return "CdetDetector";
}

//______________________________________________________________________________
const char *CdetDetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CdetDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CdetDetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CdetDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CdetDetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CdetDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CdetDetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CdetDetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CdetApparatus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CdetApparatus::Class_Name()
{
   return "CdetApparatus";
}

//______________________________________________________________________________
const char *CdetApparatus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CdetApparatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CdetApparatus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CdetApparatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CdetApparatus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CdetApparatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CdetApparatus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CdetApparatus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HcalDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class HcalDetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HcalDetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(HcalDetector::Class(),this);
   }
}

//______________________________________________________________________________
void HcalDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HcalDetector.
      TClass *R__cl = ::HcalDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPed", (void*)&fPed);
      R__insp.InspectMember("HcalDetector::Vflt_t", (void*)&fPed, "fPed.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGain", (void*)&fGain);
      R__insp.InspectMember("HcalDetector::Vflt_t", (void*)&fGain, "fGain.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhit", &fNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawADC", &fRawADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorADC", &fCorADC);
      THaNonTrackingDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HcalDetector(void *p) {
      return  p ? new(p) ::HcalDetector : new ::HcalDetector;
   }
   static void *newArray_HcalDetector(Long_t nElements, void *p) {
      return p ? new(p) ::HcalDetector[nElements] : new ::HcalDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_HcalDetector(void *p) {
      delete ((::HcalDetector*)p);
   }
   static void deleteArray_HcalDetector(void *p) {
      delete [] ((::HcalDetector*)p);
   }
   static void destruct_HcalDetector(void *p) {
      typedef ::HcalDetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::HcalDetector

//______________________________________________________________________________
void HcalApparatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class HcalApparatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HcalApparatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(HcalApparatus::Class(),this);
   }
}

//______________________________________________________________________________
void HcalApparatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HcalApparatus.
      TClass *R__cl = ::HcalApparatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtotal", &fNtotal);
      THaApparatus::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HcalApparatus(void *p) {
      return  p ? new(p) ::HcalApparatus : new ::HcalApparatus;
   }
   static void *newArray_HcalApparatus(Long_t nElements, void *p) {
      return p ? new(p) ::HcalApparatus[nElements] : new ::HcalApparatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_HcalApparatus(void *p) {
      delete ((::HcalApparatus*)p);
   }
   static void deleteArray_HcalApparatus(void *p) {
      delete [] ((::HcalApparatus*)p);
   }
   static void destruct_HcalApparatus(void *p) {
      typedef ::HcalApparatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::HcalApparatus

//______________________________________________________________________________
void FbusDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class FbusDetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FbusDetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(FbusDetector::Class(),this);
   }
}

//______________________________________________________________________________
void FbusDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FbusDetector.
      TClass *R__cl = ::FbusDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPed", (void*)&fPed);
      R__insp.InspectMember("FbusDetector::Vflt_t", (void*)&fPed, "fPed.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGain", (void*)&fGain);
      R__insp.InspectMember("FbusDetector::Vflt_t", (void*)&fGain, "fGain.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhit", &fNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawADC", &fRawADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorADC", &fCorADC);
      THaNonTrackingDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FbusDetector(void *p) {
      return  p ? new(p) ::FbusDetector : new ::FbusDetector;
   }
   static void *newArray_FbusDetector(Long_t nElements, void *p) {
      return p ? new(p) ::FbusDetector[nElements] : new ::FbusDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_FbusDetector(void *p) {
      delete ((::FbusDetector*)p);
   }
   static void deleteArray_FbusDetector(void *p) {
      delete [] ((::FbusDetector*)p);
   }
   static void destruct_FbusDetector(void *p) {
      typedef ::FbusDetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FbusDetector

//______________________________________________________________________________
void FbusApparatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class FbusApparatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FbusApparatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(FbusApparatus::Class(),this);
   }
}

//______________________________________________________________________________
void FbusApparatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FbusApparatus.
      TClass *R__cl = ::FbusApparatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtotal", &fNtotal);
      THaApparatus::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FbusApparatus(void *p) {
      return  p ? new(p) ::FbusApparatus : new ::FbusApparatus;
   }
   static void *newArray_FbusApparatus(Long_t nElements, void *p) {
      return p ? new(p) ::FbusApparatus[nElements] : new ::FbusApparatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_FbusApparatus(void *p) {
      delete ((::FbusApparatus*)p);
   }
   static void deleteArray_FbusApparatus(void *p) {
      delete [] ((::FbusApparatus*)p);
   }
   static void destruct_FbusApparatus(void *p) {
      typedef ::FbusApparatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FbusApparatus

//______________________________________________________________________________
void CdetDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class CdetDetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CdetDetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(CdetDetector::Class(),this);
   }
}

//______________________________________________________________________________
void CdetDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CdetDetector.
      TClass *R__cl = ::CdetDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataDest[1]", fDataDest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOff", &fOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPed", &fPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGain", &fGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTdc2T", &fTdc2T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCn", &fCn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAdcMIP", &fAdcMIP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTNhit", &fTNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawLTDC", &fRawLTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawTTDC", &fRawTTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorLTDC", &fCorLTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorTTDC", &fCorTTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fANhit", &fANhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawADC", &fRawADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorADC", &fCorADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhit", &fNhit);
      THaNonTrackingDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CdetDetector(void *p) {
      return  p ? new(p) ::CdetDetector : new ::CdetDetector;
   }
   static void *newArray_CdetDetector(Long_t nElements, void *p) {
      return p ? new(p) ::CdetDetector[nElements] : new ::CdetDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_CdetDetector(void *p) {
      delete ((::CdetDetector*)p);
   }
   static void deleteArray_CdetDetector(void *p) {
      delete [] ((::CdetDetector*)p);
   }
   static void destruct_CdetDetector(void *p) {
      typedef ::CdetDetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CdetDetector

//______________________________________________________________________________
void CdetApparatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class CdetApparatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CdetApparatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(CdetApparatus::Class(),this);
   }
}

//______________________________________________________________________________
void CdetApparatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CdetApparatus.
      TClass *R__cl = ::CdetApparatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtotal", &fNtotal);
      THaApparatus::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CdetApparatus(void *p) {
      return  p ? new(p) ::CdetApparatus : new ::CdetApparatus;
   }
   static void *newArray_CdetApparatus(Long_t nElements, void *p) {
      return p ? new(p) ::CdetApparatus[nElements] : new ::CdetApparatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_CdetApparatus(void *p) {
      delete ((::CdetApparatus*)p);
   }
   static void deleteArray_CdetApparatus(void *p) {
      delete [] ((::CdetApparatus*)p);
   }
   static void destruct_CdetApparatus(void *p) {
      typedef ::CdetApparatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CdetApparatus

/********************************************************
* SBSDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSBSDict();

extern "C" void G__set_cpp_environmentSBSDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("HcalDetector.h");
  G__add_compiledheader("HcalApparatus.h");
  G__add_compiledheader("FbusDetector.h");
  G__add_compiledheader("FbusApparatus.h");
  G__add_compiledheader("CdetDetector.h");
  G__add_compiledheader("CdetApparatus.h");
  G__cpp_reset_tagtableSBSDict();
}
#include <new>
extern "C" int G__cpp_dllrevSBSDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HcalDetector */
static int G__SBSDict_498_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HcalDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HcalDetector(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HcalDetector(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HcalDetector((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HcalDetector((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HcalDetector((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HcalDetector((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SBSDictLN_HcalDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HcalDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HcalDetector[n];
     } else {
       p = new((void*) gvp) HcalDetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HcalDetector;
     } else {
       p = new((void*) gvp) HcalDetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SBSDictLN_HcalDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HcalDetector*) G__getstructoffset())->GetNhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HcalDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HcalDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HcalDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HcalDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HcalDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HcalDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HcalDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HcalDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_498_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HcalDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HcalDetector G__THcalDetector;
static int G__SBSDict_498_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HcalDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HcalDetector*) (soff+(sizeof(HcalDetector)*i)))->~G__THcalDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HcalDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HcalDetector*) (soff))->~G__THcalDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HcalApparatus */
static int G__SBSDict_499_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HcalApparatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HcalApparatus((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HcalApparatus((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HcalApparatus((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HcalApparatus((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HcalApparatus[n];
       } else {
         p = new((void*) gvp) HcalApparatus[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HcalApparatus;
       } else {
         p = new((void*) gvp) HcalApparatus;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SBSDictLN_HcalApparatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_499_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HcalApparatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_499_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HcalApparatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_499_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HcalApparatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_499_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HcalApparatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_499_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HcalApparatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_499_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HcalApparatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_499_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HcalApparatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_499_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HcalApparatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_499_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HcalApparatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HcalApparatus G__THcalApparatus;
static int G__SBSDict_499_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HcalApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HcalApparatus*) (soff+(sizeof(HcalApparatus)*i)))->~G__THcalApparatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HcalApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HcalApparatus*) (soff))->~G__THcalApparatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FbusDetector */
static int G__SBSDict_500_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FbusDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FbusDetector(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) FbusDetector(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FbusDetector((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FbusDetector((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FbusDetector((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FbusDetector((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SBSDictLN_FbusDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FbusDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FbusDetector[n];
     } else {
       p = new((void*) gvp) FbusDetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FbusDetector;
     } else {
       p = new((void*) gvp) FbusDetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SBSDictLN_FbusDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FbusDetector*) G__getstructoffset())->GetNhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FbusDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FbusDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FbusDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FbusDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FbusDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FbusDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FbusDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FbusDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_500_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FbusDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FbusDetector G__TFbusDetector;
static int G__SBSDict_500_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FbusDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FbusDetector*) (soff+(sizeof(FbusDetector)*i)))->~G__TFbusDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FbusDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FbusDetector*) (soff))->~G__TFbusDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FbusApparatus */
static int G__SBSDict_501_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FbusApparatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FbusApparatus((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FbusApparatus((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FbusApparatus((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FbusApparatus((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FbusApparatus[n];
       } else {
         p = new((void*) gvp) FbusApparatus[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FbusApparatus;
       } else {
         p = new((void*) gvp) FbusApparatus;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SBSDictLN_FbusApparatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_501_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FbusApparatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_501_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FbusApparatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_501_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FbusApparatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_501_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FbusApparatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_501_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FbusApparatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_501_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FbusApparatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_501_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FbusApparatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_501_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FbusApparatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_501_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FbusApparatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FbusApparatus G__TFbusApparatus;
static int G__SBSDict_501_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FbusApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FbusApparatus*) (soff+(sizeof(FbusApparatus)*i)))->~G__TFbusApparatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FbusApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FbusApparatus*) (soff))->~G__TFbusApparatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CdetDetector */
static int G__SBSDict_502_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CdetDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CdetDetector(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) CdetDetector(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CdetDetector((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) CdetDetector((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CdetDetector((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CdetDetector((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SBSDictLN_CdetDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CdetDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CdetDetector[n];
     } else {
       p = new((void*) gvp) CdetDetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CdetDetector;
     } else {
       p = new((void*) gvp) CdetDetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SBSDictLN_CdetDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CdetDetector*) G__getstructoffset())->GetNhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CdetDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CdetDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CdetDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CdetDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CdetDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CdetDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CdetDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CdetDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_502_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CdetDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CdetDetector G__TCdetDetector;
static int G__SBSDict_502_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CdetDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CdetDetector*) (soff+(sizeof(CdetDetector)*i)))->~G__TCdetDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CdetDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CdetDetector*) (soff))->~G__TCdetDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CdetApparatus */
static int G__SBSDict_504_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CdetApparatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CdetApparatus((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) CdetApparatus((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CdetApparatus((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CdetApparatus((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new CdetApparatus[n];
       } else {
         p = new((void*) gvp) CdetApparatus[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new CdetApparatus;
       } else {
         p = new((void*) gvp) CdetApparatus;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SBSDictLN_CdetApparatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_504_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CdetApparatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_504_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CdetApparatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_504_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CdetApparatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_504_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CdetApparatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_504_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CdetApparatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_504_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CdetApparatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_504_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CdetApparatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_504_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CdetApparatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SBSDict_504_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CdetApparatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CdetApparatus G__TCdetApparatus;
static int G__SBSDict_504_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CdetApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CdetApparatus*) (soff+(sizeof(CdetApparatus)*i)))->~G__TCdetApparatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CdetApparatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CdetApparatus*) (soff))->~G__TCdetApparatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HcalDetector */

/* HcalApparatus */

/* FbusDetector */

/* FbusApparatus */

/* CdetDetector */

/* CdetApparatus */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSBSDict {
 public:
  G__Sizep2memfuncSBSDict(): p(&G__Sizep2memfuncSBSDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSBSDict::*p)();
};

size_t G__get_sizep2memfuncSBSDict()
{
  G__Sizep2memfuncSBSDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSBSDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector))) {
     HcalDetector *G__Lderived;
     G__Lderived=(HcalDetector*)0x1000;
     {
       THaNonTrackingDetector *G__Lpbase=(THaNonTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector),G__get_linked_tagnum(&G__SBSDictLN_THaNonTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector),G__get_linked_tagnum(&G__SBSDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector),G__get_linked_tagnum(&G__SBSDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector),G__get_linked_tagnum(&G__SBSDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector),G__get_linked_tagnum(&G__SBSDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector),G__get_linked_tagnum(&G__SBSDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector),G__get_linked_tagnum(&G__SBSDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SBSDictLN_HcalApparatus))) {
     HcalApparatus *G__Lderived;
     G__Lderived=(HcalApparatus*)0x1000;
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalApparatus),G__get_linked_tagnum(&G__SBSDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalApparatus),G__get_linked_tagnum(&G__SBSDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalApparatus),G__get_linked_tagnum(&G__SBSDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalApparatus),G__get_linked_tagnum(&G__SBSDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector))) {
     FbusDetector *G__Lderived;
     G__Lderived=(FbusDetector*)0x1000;
     {
       THaNonTrackingDetector *G__Lpbase=(THaNonTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector),G__get_linked_tagnum(&G__SBSDictLN_THaNonTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector),G__get_linked_tagnum(&G__SBSDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector),G__get_linked_tagnum(&G__SBSDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector),G__get_linked_tagnum(&G__SBSDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector),G__get_linked_tagnum(&G__SBSDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector),G__get_linked_tagnum(&G__SBSDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector),G__get_linked_tagnum(&G__SBSDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SBSDictLN_FbusApparatus))) {
     FbusApparatus *G__Lderived;
     G__Lderived=(FbusApparatus*)0x1000;
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusApparatus),G__get_linked_tagnum(&G__SBSDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusApparatus),G__get_linked_tagnum(&G__SBSDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusApparatus),G__get_linked_tagnum(&G__SBSDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusApparatus),G__get_linked_tagnum(&G__SBSDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector))) {
     CdetDetector *G__Lderived;
     G__Lderived=(CdetDetector*)0x1000;
     {
       THaNonTrackingDetector *G__Lpbase=(THaNonTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector),G__get_linked_tagnum(&G__SBSDictLN_THaNonTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector),G__get_linked_tagnum(&G__SBSDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector),G__get_linked_tagnum(&G__SBSDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector),G__get_linked_tagnum(&G__SBSDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector),G__get_linked_tagnum(&G__SBSDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector),G__get_linked_tagnum(&G__SBSDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector),G__get_linked_tagnum(&G__SBSDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SBSDictLN_CdetApparatus))) {
     CdetApparatus *G__Lderived;
     G__Lderived=(CdetApparatus*)0x1000;
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetApparatus),G__get_linked_tagnum(&G__SBSDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetApparatus),G__get_linked_tagnum(&G__SBSDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetApparatus),G__get_linked_tagnum(&G__SBSDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetApparatus),G__get_linked_tagnum(&G__SBSDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSBSDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SBSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SBSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SBSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SBSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SBSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SBSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SBSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SBSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,UInt_t>",117,G__get_linked_tagnum(&G__SBSDictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,UInt_t>",117,G__get_linked_tagnum(&G__SBSDictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned int>",117,G__get_linked_tagnum(&G__SBSDictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned int,less<string> >",117,G__get_linked_tagnum(&G__SBSDictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SBSDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SBSDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Vflt_t",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__SBSDictLN_HcalDetector));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Vflt_t",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__SBSDictLN_FbusDetector));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Vflt_t",117,G__get_linked_tagnum(&G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__SBSDictLN_CdetDetector));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HcalDetector */
static void G__setup_memvarHcalDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector));
   { HcalDetector *p; p=(HcalDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("Vflt_t"),-1,2,"fPed=",0,"ADC pedestals");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("Vflt_t"),-1,2,"fGain=",0,"ADC gains");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNhit=",0,"Number of hits");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRawADC=",0,"[fNelem] Raw ADC data");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fCorADC=",0,"[fNelem] Corrected ADC data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SBSDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HcalApparatus */
static void G__setup_memvarHcalApparatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalApparatus));
   { HcalApparatus *p; p=(HcalApparatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtotal=",0,"Total number of hits in all detectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SBSDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FbusDetector */
static void G__setup_memvarFbusDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector));
   { FbusDetector *p; p=(FbusDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("Vflt_t"),-1,2,"fPed=",0,"ADC pedestals");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("Vflt_t"),-1,2,"fGain=",0,"ADC gains");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNhit=",0,"Number of hits");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRawADC=",0,"[fNelem] Raw ADC data");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fCorADC=",0,"[fNelem] Corrected ADC data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SBSDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FbusApparatus */
static void G__setup_memvarFbusApparatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusApparatus));
   { FbusApparatus *p; p=(FbusApparatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtotal=",0,"Total number of hits in all detectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SBSDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CdetDetector */
static void G__setup_memvarCdetDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector));
   { CdetDetector *p; p=(CdetDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("NDEST=%lldLL",(long long)CdetDetector::NDEST).data(),0,"Only one side instrumented, currently!!");
   G__memvar_setup((void*)((long)(&p->fDataDest)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SBSDictLN_CdetDetectorcLcLDataDest),-1,-1,1,"fDataDest[1]=",0,"Lookup table for decoder  ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fOff=",0,"[fNelem] TDC offsets for paddles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPed=",0,"[fNelem] ADC pedestals for addles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGain=",0,"[fNelem] ADC gains for paddles");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTdc2T=",0,"linear conversion between TDC and time (s/ch)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCn=",0,"speed of light in material  (meters/second)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAdcMIP=",0,"nominal ADC above pedestal for MIP");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTNhit=",0,"Number of TDC times");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRawLTDC=",0,"[fNelem] Raw Leading Edge TDC data");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRawTTDC=",0,"[fNelem] Raw Trailing Edge TDC data");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCorLTDC=",0,"[fNelem] Corrected Leading Edge TDC data");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCorTTDC=",0,"[fNelem] Corrected Leading Edge TDC data");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fANhit=",0,"Number of ADC amplitudes");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRawADC=",0,"[fNelem] Raw ADC data");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCorADC=",0,"[fNelem] Corrected ADC data");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNhit=",0,"Number of paddles with TDC hits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SBSDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CdetApparatus */
static void G__setup_memvarCdetApparatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetApparatus));
   { CdetApparatus *p; p=(CdetApparatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtotal=",0,"Total number of hits in all detectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SBSDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSBSDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHcalDetector(void) {
   /* HcalDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalDetector));
   G__memfunc_setup("HcalDetector",1202,G__SBSDict_498_0_1, 105, G__get_linked_tagnum(&G__SBSDictLN_HcalDetector), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HcalDetector",1202,G__SBSDict_498_0_2, 105, G__get_linked_tagnum(&G__SBSDictLN_HcalDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseProcess",1340,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineProcess",1121,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNhits",806,G__SBSDict_498_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__SBSDict_498_0_11, 85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HcalDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SBSDict_498_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HcalDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SBSDict_498_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HcalDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SBSDict_498_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HcalDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SBSDict_498_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SBSDict_498_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HcalDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SBSDict_498_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HcalDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SBSDict_498_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HcalDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SBSDict_498_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HcalDetector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HcalDetector", 1328, G__SBSDict_498_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHcalApparatus(void) {
   /* HcalApparatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SBSDictLN_HcalApparatus));
   G__memfunc_setup("HcalApparatus",1321,G__SBSDict_499_0_1, 105, G__get_linked_tagnum(&G__SBSDictLN_HcalApparatus), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"U\"' name C - - 10 '\"Hadron Arm Apparatus\"' description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__SBSDict_499_0_5, 85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HcalApparatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SBSDict_499_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HcalApparatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SBSDict_499_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HcalApparatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SBSDict_499_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HcalApparatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SBSDict_499_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SBSDict_499_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HcalApparatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SBSDict_499_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HcalApparatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SBSDict_499_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HcalApparatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SBSDict_499_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HcalApparatus::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HcalApparatus", 1447, G__SBSDict_499_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFbusDetector(void) {
   /* FbusDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusDetector));
   G__memfunc_setup("FbusDetector",1226,G__SBSDict_500_0_1, 105, G__get_linked_tagnum(&G__SBSDictLN_FbusDetector), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FbusDetector",1226,G__SBSDict_500_0_2, 105, G__get_linked_tagnum(&G__SBSDictLN_FbusDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseProcess",1340,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineProcess",1121,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNhits",806,G__SBSDict_500_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__SBSDict_500_0_11, 85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FbusDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SBSDict_500_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FbusDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SBSDict_500_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FbusDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SBSDict_500_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FbusDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SBSDict_500_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SBSDict_500_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FbusDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SBSDict_500_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FbusDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SBSDict_500_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FbusDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SBSDict_500_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FbusDetector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FbusDetector", 1352, G__SBSDict_500_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFbusApparatus(void) {
   /* FbusApparatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SBSDictLN_FbusApparatus));
   G__memfunc_setup("FbusApparatus",1345,G__SBSDict_501_0_1, 105, G__get_linked_tagnum(&G__SBSDictLN_FbusApparatus), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"U\"' name C - - 10 '\"Fbus Apparatus\"' description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__SBSDict_501_0_5, 85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FbusApparatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SBSDict_501_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FbusApparatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SBSDict_501_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FbusApparatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SBSDict_501_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FbusApparatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SBSDict_501_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SBSDict_501_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FbusApparatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SBSDict_501_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FbusApparatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SBSDict_501_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FbusApparatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SBSDict_501_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FbusApparatus::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FbusApparatus", 1471, G__SBSDict_501_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCdetDetector(void) {
   /* CdetDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetDetector));
   G__memfunc_setup("CdetDetector",1210,G__SBSDict_502_0_1, 105, G__get_linked_tagnum(&G__SBSDictLN_CdetDetector), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CdetDetector",1210,G__SBSDict_502_0_2, 105, G__get_linked_tagnum(&G__SBSDictLN_CdetDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__SBSDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseProcess",1340,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineProcess",1121,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNhits",806,G__SBSDict_502_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__SBSDict_502_0_12, 85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CdetDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SBSDict_502_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CdetDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SBSDict_502_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CdetDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SBSDict_502_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CdetDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SBSDict_502_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SBSDict_502_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CdetDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SBSDict_502_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CdetDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SBSDict_502_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CdetDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SBSDict_502_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CdetDetector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CdetDetector", 1336, G__SBSDict_502_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCdetApparatus(void) {
   /* CdetApparatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SBSDictLN_CdetApparatus));
   G__memfunc_setup("CdetApparatus",1329,G__SBSDict_504_0_1, 105, G__get_linked_tagnum(&G__SBSDictLN_CdetApparatus), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"U\"' name C - - 10 '\"Cdet Apparatus\"' description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__SBSDict_504_0_5, 85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CdetApparatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SBSDict_504_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CdetApparatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SBSDict_504_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CdetApparatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SBSDict_504_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CdetApparatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SBSDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SBSDict_504_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SBSDict_504_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CdetApparatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SBSDict_504_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CdetApparatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SBSDict_504_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CdetApparatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SBSDict_504_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CdetApparatus::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CdetApparatus", 1455, G__SBSDict_504_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSBSDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSBSDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSBSDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SBSDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_THaEvData = { "THaEvData" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_THaAnalysisObject = { "THaAnalysisObject" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_THaAnalysisObjectcLcLEStatus = { "THaAnalysisObject::EStatus" , 101 , -1 };
G__linked_taginfo G__SBSDictLN_THaAnalysisObjectcLcLEMode = { "THaAnalysisObject::EMode" , 101 , -1 };
G__linked_taginfo G__SBSDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR = { "map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_THaDetectorBase = { "THaDetectorBase" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_THaApparatus = { "THaApparatus" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_THaDetector = { "THaDetector" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_THaSpectrometerDetector = { "THaSpectrometerDetector" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_THaNonTrackingDetector = { "THaNonTrackingDetector" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_HcalDetector = { "HcalDetector" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_HcalApparatus = { "HcalApparatus" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_FbusDetector = { "FbusDetector" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_FbusApparatus = { "FbusApparatus" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_CdetDetector = { "CdetDetector" , 99 , -1 };
G__linked_taginfo G__SBSDictLN_CdetDetectorcLcLDataDest = { "CdetDetector::DataDest" , 115 , -1 };
G__linked_taginfo G__SBSDictLN_CdetApparatus = { "CdetApparatus" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSBSDict() {
  G__SBSDictLN_TClass.tagnum = -1 ;
  G__SBSDictLN_TBuffer.tagnum = -1 ;
  G__SBSDictLN_TMemberInspector.tagnum = -1 ;
  G__SBSDictLN_TObject.tagnum = -1 ;
  G__SBSDictLN_TNamed.tagnum = -1 ;
  G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__SBSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SBSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SBSDictLN_TClonesArray.tagnum = -1 ;
  G__SBSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SBSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SBSDictLN_TDatime.tagnum = -1 ;
  G__SBSDictLN_THaEvData.tagnum = -1 ;
  G__SBSDictLN_THaAnalysisObject.tagnum = -1 ;
  G__SBSDictLN_THaAnalysisObjectcLcLEStatus.tagnum = -1 ;
  G__SBSDictLN_THaAnalysisObjectcLcLEMode.tagnum = -1 ;
  G__SBSDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__SBSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SBSDictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__SBSDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__SBSDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__SBSDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__SBSDictLN_THaDetectorBase.tagnum = -1 ;
  G__SBSDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__SBSDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SBSDictLN_THaApparatus.tagnum = -1 ;
  G__SBSDictLN_THaDetector.tagnum = -1 ;
  G__SBSDictLN_THaSpectrometerDetector.tagnum = -1 ;
  G__SBSDictLN_THaNonTrackingDetector.tagnum = -1 ;
  G__SBSDictLN_HcalDetector.tagnum = -1 ;
  G__SBSDictLN_HcalApparatus.tagnum = -1 ;
  G__SBSDictLN_FbusDetector.tagnum = -1 ;
  G__SBSDictLN_FbusApparatus.tagnum = -1 ;
  G__SBSDictLN_CdetDetector.tagnum = -1 ;
  G__SBSDictLN_CdetDetectorcLcLDataDest.tagnum = -1 ;
  G__SBSDictLN_CdetApparatus.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSBSDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TDatime);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_THaEvData);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_THaAnalysisObject);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_THaAnalysisObjectcLcLEStatus);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_THaAnalysisObjectcLcLEMode);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_THaDetectorBase);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_THaApparatus);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_THaDetector);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_THaSpectrometerDetector);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_THaNonTrackingDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SBSDictLN_HcalDetector),sizeof(HcalDetector),-1,324864,"Hadron calorimeter",G__setup_memvarHcalDetector,G__setup_memfuncHcalDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SBSDictLN_HcalApparatus),sizeof(HcalApparatus),-1,324864,"Hadron Arm",G__setup_memvarHcalApparatus,G__setup_memfuncHcalApparatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SBSDictLN_FbusDetector),sizeof(FbusDetector),-1,324864,"Fastbus detector 1",G__setup_memvarFbusDetector,G__setup_memfuncFbusDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SBSDictLN_FbusApparatus),sizeof(FbusApparatus),-1,324864,"Fastbus test stand",G__setup_memvarFbusApparatus,G__setup_memfuncFbusApparatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SBSDictLN_CdetDetector),sizeof(CdetDetector),-1,324864,"Fastbus detector 1",G__setup_memvarCdetDetector,G__setup_memfuncCdetDetector);
   G__get_linked_tagnum_fwd(&G__SBSDictLN_CdetDetectorcLcLDataDest);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SBSDictLN_CdetApparatus),sizeof(CdetApparatus),-1,324864,"Fastbus test stand",G__setup_memvarCdetApparatus,G__setup_memfuncCdetApparatus);
}
extern "C" void G__cpp_setupSBSDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSBSDict()");
  G__set_cpp_environmentSBSDict();
  G__cpp_setup_tagtableSBSDict();

  G__cpp_setup_inheritanceSBSDict();

  G__cpp_setup_typetableSBSDict();

  G__cpp_setup_memvarSBSDict();

  G__cpp_setup_memfuncSBSDict();
  G__cpp_setup_globalSBSDict();
  G__cpp_setup_funcSBSDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSBSDict();
  return;
}
class G__cpp_setup_initSBSDict {
  public:
    G__cpp_setup_initSBSDict() { G__add_setup_func("SBSDict",(G__incsetup)(&G__cpp_setupSBSDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSBSDict() { G__remove_setup_func("SBSDict"); }
};
G__cpp_setup_initSBSDict G__cpp_setup_initializerSBSDict;

