#!/bin/sh

# Bump .submake value.
# Switch '-v' means to bump the version.
# Switch '-r' means to bump the revision
# Switch '-u' means to bump the update code.
# Switch '-m' means to bump the submake code.
# The first parameter is the class that contains the build data.  If not
#   supplied, this class is not written.
# Additional parameters may be supplied, which are taken as other build data
#   to include.  They are interpreted as the first being the key, and the
#   second being its value.

bump_submake=0
class=""

if [ ! -r ".version" ]; then
  echo >.version "1"
fi
if [ ! -r ".revision" ]; then
  echo >.revision "0"
fi
if [ ! -r ".update" ]; then
  echo >.update "0"
fi
if [ ! -r ".submake" ]; then
  echo >.submake "0"
fi

version=`cat .version`
revision=`cat .revision`
update=`cat .update`
submake=`cat .submake`

update_str=""
if [ $update -gt 0 ]; then
  update_str=".$update"
fi

case $1 in
  --) shift
      ;;
  -v) version=`expr $version + 1`
      revision=0
      update=0
      submake=0
      shift
      ;;
  -r) revision=`expr $revision + 1`
      update=0
      submake=0
      shift
      ;;
  -m) bump_submake=1
      shift
      ;;
  -*) echo "Unknown option: $1"
      shift
      ;;
esac

vstr="${version}.${revision}${update_str}"

if [ $# -gt 0 ]; then
  class=${1}
  shift
  file=${class}.java
  echo >$file '// This file is automatically generated.'
  echo >>$file 'import java.util.*;'
  echo >>$file 'public class '"$class"' extends Hashtable {'
  echo >>$file '  '"$class"'() {'
  echo >>$file '    put("dateString", "'`date '+%D at %I:%M:%S%p %Z'`'");'
  echo >>$file '    put("versionString", "'"${vstr}"'");'
  echo >>$file '    put("version", new Integer('"${version}"'));'
  echo >>$file '    put("revision", new Integer('"${revision}"'));'
  echo >>$file '    put("update", new Integer('"${update}"'));'
  echo >>$file '    put("build", new Integer('"${submake}"'));'
  while [ $# -gt 1 ]
  do
    echo >>$file '    put("'"$1"'", "'"$2"'");'
    shift
    shift
  done
  echo >>$file '  }'
  echo >>$file '}'
fi

if [ $bump_submake -ne 0 ]; then
  submake=`expr $submake + 1`
fi

echo >.version "$version"
echo >.revision "$revision"
echo >.update "$update"
echo >.submake "$submake"
echo >.verstring "$vstr"